[
  {
    "path": "posts/2022-06-27-sqlconnect/",
    "title": "polars, pandas SQL 오라클 연결",
    "description": "SQL CONNECTING.",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2022-06-28",
    "categories": [],
    "contents": "\r\n\r\n파이썬 오라클 연결\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-06-28T13:36:15+09:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-16-wslport/",
    "title": "WSL_포트 포워딩 및 리눅스 네트워크 드라이브 마운팅",
    "description": "WSL port forwading in windows.",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-09-16",
    "categories": [],
    "contents": "\n\n포트포워딩\n\n\n#포트 추가\nnetsh interface portproxy add v4tov4 listenport=33306 listenaddress=0.0.0.0 connectport=3306 connectaddress=110.110.110.110\n\n#현재 포워딩 리스트 확인\nnetsh interface portproxy show v4tov4\n\n#기존에 있던 포워딩 포트 삭제\nnetsh interface portproxy delete v4tov4 listenport=9000 listenaddress=0.0.0.0\n\n#드라이브 마운트\n sudo mount -t drvfs G: /mnt/g\n \n\n\n\n",
    "preview": {},
    "last_modified": "2021-09-17T11:53:32+09:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-12-timestampsink/",
    "title": "윈도우즈 timestamp 조정하기",
    "description": "Match timestamp in Binance",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-08-12",
    "categories": [
      "binance",
      "bash"
    ],
    "contents": "\r\nnet stop w32time\r\n\r\nw32tm /unregister\r\nw32tm /register\r\n\r\nnet start w32time\r\n\r\nw32tm /resync ##명확하진 않으나, 해야할때가 있고 해도 안먹힐때가 있음. 결과적으로는 둘다 작동.\r\n\r\nMARKDOWN\r\nTEST\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-06-28T13:41:43+09:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-07-kaggleinstall/",
    "title": "리눅스나 맥에서 kaggle json 등록하기",
    "description": "In the process of kaggle linking to R,python…",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-03-07",
    "categories": [
      "kaggle",
      "python",
      "R"
    ],
    "contents": "\nWSL(+linux), MAC 에서 home/kaggle 세팅 방법\npip install kaggle\n이 다음이 문제가 됨. .kaggle 폴더가 보이지 않음. 억지로 폴더로 만들어서 하다보면 또 형식이 맞지 않는다면서 문제가 생기는 경우가 생김. 기타 json파일을 복사하려고 하면 권한 문제든 뭐든 제대로 안되는 경우가 자꾸 생김.\n이 경우에 아래 방식으로 진행하면 처리가 가능\n#kaggle 패키지 설치\n1.pip install kaggle\n# 자기 홈디렉토리의 .kaggle로 이동\n# ~/과 ./를 볼수 있는데 ~인 경우는 기본적인 홈디렉토리를 의미하고 .의 경우는 현디렉토리를 의미한다.\n2.cd ~/.kaggle\n#홈페이지에가서 key를 받고..\n3.homepage www.kaggle.com -> Your Account -> Create New API token\n#다운받은 json 파일을 옮긴다.당연히 mv는 이동을 하고자 할떄 쓰는 명령어이다.\n#패키지 설치할 떄 종종 쓰이니 알아두면 괜찮다.\n4.mv ~/Downloads/kaggle.json ./\n#이후 권한을 설정해준다. chmod는 권한설정 명령어이다. \n5.chmod 600 ./kaggle.json\n이렇게 기본적인 세팅을 해주고 파이썬에서\nimport kaggle #카글을 import\nkaggle.api.authenticate() #권한 확인\n\n#kaggle.api.dataset_download_files('zynicide/wine-reviews/wines', path='g:/내 드라이브/work/wines', unzip=True)\n#위는 ㅅ매플로, 원하는 데이터셋을 원하는 경로에 압축을 풀어주는 기능이다.\n#카글 데이터셋을 연습할때, 사이트 자체에서 하기가 불편한 경우가 더러 생기는데, \n#개인적으로 연습하기도, 화면상으로 참조하기도 훨씬 편하다.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-12T09:26:40+09:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-05-wtvaluef/",
    "title": "확률 가중 함수와 가치함수",
    "description": "Behavioral economics:Probability-weighted and value functions",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-03-05",
    "categories": [
      "Probability Weighted Function",
      "Value function",
      "Behavioral economics",
      "R"
    ],
    "contents": "\r\n\r\n확률가중함수확률에 대해 사람들이\r\n가중치를 두어 생각한다는 것을 보여주는 함수가치함수사람의 손실회피 성향을 보여주는\r\n것으로, 손실에 대해서 더 많은 가치 부여를 보이는 경향을 보임\r\n\r\n\r\n\r\nlibrary(dplyr)\r\n#확률 가중 함수\r\nw_p = function(p,r=0.65){\r\n  if(p<0){\r\n    k = p * (-1)\r\n    return((k**r)/((k**r)+(1-k)**r)**(1/r)*(-1) * 2.25)\r\n  }\r\n  if(p>0){\r\n    return((p**r)/((p**r)+(1-p)**r)**(1/r))\r\n  }\r\n  if(p==0){\r\n    return(0)\r\n  }\r\n}\r\n\r\n# 가치 함수\r\nvalue_f = function(x){\r\n    if(x>=0){\r\n        y = x**0.88\r\n    }\r\n    if(x<0){\r\n        y = -2.25*(-x)**0.88\r\n    }\r\n    return(y)\r\n}\r\n\r\n#확률리스트 생성\r\np_list = seq(-1,1,by=0.01)\r\np_df = data.frame(p_list)\r\np_df$W_P = unlist(Map(w_p, abs(p_list)))\r\np_df$VALUE_F = unlist(Map(value_f, p_list))\r\np_df$FELL_VALUE = p_df$W_P*p_df$VALUE_F\r\n#head(p_df)\r\np_df_reform = tidyr::gather(p_df, key=\"TYPE\",value='value',-p_list) %>% filter(TYPE!='W_P')\r\n\r\nlibrary(ggplot2)\r\nggplot() + geom_point(data=p_df_reform, aes(x=p_list, y=value, group=TYPE, col=TYPE))+\r\n  geom_point(data=p_df_reform, aes(x=p_list, y=p_list), col='grey')+\r\n  xlab('real prob(%)')+\r\n  ylab('Probability of feeling') + theme_bw()\r\n\r\n\r\n\r\n실제 적용시 제대로 작동안됨.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-03-05-wtvaluef/wtvaluef_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-06-28T13:42:52+09:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-03-03-2021-03-03-rinubuntu/",
    "title": "R 네트워크 관련 패키지 설치(ubuntu)",
    "description": "우분투에서 R 초기 패키지 설치 전에 만지게 되는 것들",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-03-03",
    "categories": [
      "ubuntu",
      "R"
    ],
    "contents": "\r\n아래 패키지들이 정확한 설치대상은 아닐 수 있음\r\njsonlite, httr, rvest, mongolite 등 네트워크 사용이 필요한 경우\r\n설치가 꼭 제대로 안되는데 아래 내용들 먼저 설치해주면 보통 해결됨\r\nsudo apt-get install -y libssl-dev\r\nsudo apt-get install libxml2-dev\r\nsudo apt-get install libcurl4-openssl-dev\r\nsudo apt-get install libsasl2-dev\r\n\r\n추가내용\r\n항상 그러지는 않는 것으로 보이나 다른 패키지 설치 전에 에러가 나서\r\n먼저 설치해줘야 할 것들\r\n#rcpp 설치시 에러가 나는 경우\r\ninstall.packages('codetools')\r\ninstall.packages('Rcpp')\r\n\r\n#distill 관련\r\ninstall.packages('lattice')\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-06-28T13:15:19+09:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-04-usefulnewpack/",
    "title": "g2r",
    "description": "New and useful visualization packages",
    "author": [
      {
        "name": "Jongseon, Han",
        "url": "https://hanjongseon.github.io"
      }
    ],
    "date": "2021-03-03",
    "categories": [
      "R",
      "Visualization"
    ],
    "contents": "\ninteractive plot 패키지로 g2r이 나왔다. 아직 완성도가 있다고 보기는 어렵지만 plotly에 비하면 훨씬 직관적이고 이해하기 좋다. ggplot에서 그 방향성은 유지된 것으로 보인다. 방법적인 측면에서 거의 유지가 되었기 때문에 ggplot을 사용하던 사람들의 입장에서 보면 일단 배우기가 쉽다고 보면 된다.\n아래는 해당 패키지의 공개 예제이다.\n# install.packages(\"remotes\")\nremotes::install_github(\"devOpifex/g2r\")\n\n\nlibrary(g2r)\njson <- jsonlite::fromJSON(\n  \"https://gw.alipayobjects.com/os/antvdemo/assets/data/baby-names.json\"\n)\n\njson %>%\n  dplyr::group_by(name, year) %>%\n  dplyr::summarise(n = sum(n)) %>%  \n  g2(asp(year, n, color = name, shape = \"smooth\")) %>% \n  fig_area(\n    adjust(\"stack\"), adjust(\"symmetric\"),\n    fillOpacity = .85\n  ) %>% \n  gauge_x_linear(tickInterval = 20) %>% \n  legend_color(position = \"right\")\n\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-03T22:21:02+09:00",
    "input_file": {}
  }
]
